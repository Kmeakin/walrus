---
source: crates/walrus-codegen/src/tests.rs
expression: module

---
; ModuleID = 'module'
source_filename = "module"

define void @builtins.exit.wrapper(i8* %env, i32 %status) {
  call void @exit(i32 %status)
  unreachable
}

declare void @exit(i32)

define {} @builtins.putchar.wrapper(i8* %env, i32 %c) {
  %1 = call i32 @putchar(i32 %c)
  ret {} zeroinitializer
}

declare i32 @putchar(i32)

define i1 @main(i8* %main.env) {
main.entry:
  br i1 true, label %"&&.then", label %"&&.else"

"&&.then":                                        ; preds = %main.entry
  br label %"&&.end"

"&&.else":                                        ; preds = %main.entry
  br label %"&&.end"

"&&.end":                                         ; preds = %"&&.else", %"&&.then"
  %"&&.merge" = phi i1 [ false, %"&&.then" ], [ true, %"&&.else" ]
  ret i1 %"&&.merge"
}

