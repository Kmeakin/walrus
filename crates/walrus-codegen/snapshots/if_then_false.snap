---
source: crates/walrus-codegen/src/tests.rs
expression: module

---
; ModuleID = 'module'
source_filename = "module"

define void @builtins.exit.wrapper(i8* %env, i32 %status) {
  call void @exit(i32 %status)
  unreachable
}

declare void @exit(i32)

define {} @builtins.putchar.wrapper(i8* %env, i32 %c) {
  %1 = call i32 @putchar(i32 %c)
  ret {} zeroinitializer
}

declare i32 @putchar(i32)

define {} @main(i8* %main.env) {
main.entry:
  br i1 false, label %if.then, label %if.else

if.then:                                          ; preds = %main.entry
  br label %if.end

if.else:                                          ; preds = %main.entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %if.merge = phi {} [ zeroinitializer, %if.then ], [ zeroinitializer, %if.else ]
  ret {} %if.merge
}

