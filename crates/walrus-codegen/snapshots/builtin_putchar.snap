---
source: crates/walrus-codegen/src/tests.rs
expression: module

---
; ModuleID = 'module'
source_filename = "module"

define void @builtins.exit(i32 %status) {
  call void @exit(i32 %status)
  unreachable
}

declare void @exit(i32)

define {} @builtins.putchar(i32 %c) {
  %1 = call i32 @putchar(i32 %c)
  ret {} zeroinitializer
}

declare i32 @putchar(i32)

define {} @main() {
main.entry:
  %builtins.putchar.call = call {} @builtins.putchar(i32 104)
  %builtins.putchar.call1 = call {} @builtins.putchar(i32 101)
  %builtins.putchar.call2 = call {} @builtins.putchar(i32 108)
  %builtins.putchar.call3 = call {} @builtins.putchar(i32 108)
  %builtins.putchar.call4 = call {} @builtins.putchar(i32 111)
  %builtins.putchar.call5 = call {} @builtins.putchar(i32 32)
  %builtins.putchar.call6 = call {} @builtins.putchar(i32 119)
  %builtins.putchar.call7 = call {} @builtins.putchar(i32 111)
  %builtins.putchar.call8 = call {} @builtins.putchar(i32 114)
  %builtins.putchar.call9 = call {} @builtins.putchar(i32 108)
  %builtins.putchar.call10 = call {} @builtins.putchar(i32 100)
  ret {} zeroinitializer
}

