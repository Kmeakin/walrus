---
source: crates/walrus-codegen/src/codegen.rs
expression: llvm_module.print_to_string().to_string()

---
; ModuleID = 'module'
source_filename = "module"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

define void @builtins.exit.wrapper(i8* %env, i32 %status) {
  call void @exit(i32 %status)
  unreachable
}

declare void @exit(i32)

define i32 @main(i8* %main.env) {
main.entry:
  %tuple.alloca = alloca { i32, i32 }, align 8
  %tuple.0 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tuple.alloca, i32 0, i32 0
  store i32 5, i32* %tuple.0, align 4
  %tuple.1 = getelementptr inbounds { i32, i32 }, { i32, i32 }* %tuple.alloca, i32 0, i32 1
  store i32 6, i32* %tuple.1, align 4
  %tuple = load { i32, i32 }, { i32, i32 }* %tuple.alloca, align 4
  %tuple.01 = extractvalue { i32, i32 } %tuple, 0
  %x.alloca = alloca i32, align 4
  store i32 %tuple.01, i32* %x.alloca, align 4
  %tuple.12 = extractvalue { i32, i32 } %tuple, 1
  %y.alloca = alloca i32, align 4
  store i32 %tuple.12, i32* %y.alloca, align 4
  %x = load i32, i32* %x.alloca, align 4
  ret i32 %x
}

; Function Attrs: nounwind
declare void @llvm.stackprotector(i8*, i8**) #0

attributes #0 = { nounwind }

