---
source: crates/walrus-semantics/src/ty.rs
expression: types

---
InferenceResult {
    type_of_var: {
        1: Fn(
            FnType {
                params: [
                    Primitive(
                        Int,
                    ),
                ],
                ret: Tuple(
                    [],
                ),
            },
        ),
        3: Primitive(
            Int,
        ),
    },
    type_of_expr: {
        0: Fn(
            FnType {
                params: [
                    Primitive(
                        Int,
                    ),
                ],
                ret: Tuple(
                    [],
                ),
            },
        ),
        1: Fn(
            FnType {
                params: [
                    Primitive(
                        Int,
                    ),
                ],
                ret: Tuple(
                    [],
                ),
            },
        ),
        2: Tuple(
            [],
        ),
    },
    type_of_type: {
        0: Fn(
            FnType {
                params: [
                    Primitive(
                        Int,
                    ),
                ],
                ret: Tuple(
                    [],
                ),
            },
        ),
        1: Primitive(
            Int,
        ),
        2: Tuple(
            [],
        ),
    },
    type_of_pat: {
        0: Primitive(
            Int,
        ),
    },
    type_of_fn: {
        0: FnType {
            params: [],
            ret: Fn(
                FnType {
                    params: [
                        Primitive(
                            Int,
                        ),
                    ],
                    ret: Tuple(
                        [],
                    ),
                },
            ),
        },
        1: FnType {
            params: [
                Primitive(
                    Int,
                ),
            ],
            ret: Tuple(
                [],
            ),
        },
    },
    diagnostics: [],
}
