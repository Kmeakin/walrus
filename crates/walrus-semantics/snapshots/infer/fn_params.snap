---
source: crates/walrus-semantics/src/ty.rs
expression: types

---
InferenceResult {
    type_of_expr: {
        0: App {
            ctor: Fn,
            params: [
                App {
                    ctor: Int,
                    params: [],
                },
                App {
                    ctor: Tuple,
                    params: [],
                },
            ],
        },
        1: App {
            ctor: Fn,
            params: [
                App {
                    ctor: Int,
                    params: [],
                },
                App {
                    ctor: Tuple,
                    params: [],
                },
            ],
        },
        2: App {
            ctor: Tuple,
            params: [],
        },
    },
    type_of_type: {
        0: App {
            ctor: Fn,
            params: [
                App {
                    ctor: Int,
                    params: [],
                },
                App {
                    ctor: Tuple,
                    params: [],
                },
            ],
        },
        1: App {
            ctor: Int,
            params: [],
        },
        2: App {
            ctor: Tuple,
            params: [],
        },
    },
    type_of_pat: {
        0: App {
            ctor: Int,
            params: [],
        },
    },
    type_of_fn: {
        0: FnType {
            params: [],
            ret: App {
                ctor: Fn,
                params: [
                    App {
                        ctor: Int,
                        params: [],
                    },
                    App {
                        ctor: Tuple,
                        params: [],
                    },
                ],
            },
        },
        1: FnType {
            params: [
                App {
                    ctor: Int,
                    params: [],
                },
            ],
            ret: App {
                ctor: Tuple,
                params: [],
            },
        },
    },
    diagnostics: [],
}
