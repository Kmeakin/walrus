---
source: crates/walrus-semantics/src/ty.rs
expression: types
---
InferenceResult {
    type_of_expr: ArenaMap {
        v: [
            Some(
                App(
                    TypeApp {
                        ctor: Int,
                        params: [],
                    },
                ),
            ),
            Some(
                App(
                    TypeApp {
                        ctor: Int,
                        params: [],
                    },
                ),
            ),
            Some(
                App(
                    TypeApp {
                        ctor: Int,
                        params: [],
                    },
                ),
            ),
        ],
        _ty: PhantomData,
    },
    type_of_pat: ArenaMap {
        v: [
            Some(
                App(
                    TypeApp {
                        ctor: Int,
                        params: [],
                    },
                ),
            ),
        ],
        _ty: PhantomData,
    },
    type_of_fn: ArenaMap {
        v: [
            Some(
                FnType {
                    params: [],
                    ret: App(
                        TypeApp {
                            ctor: Int,
                            params: [],
                        },
                    ),
                },
            ),
        ],
        _ty: PhantomData,
    },
    diagnostics: [],
}
